import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/maven" }
        maven {url "https://oss.sonatype.org/content/repositories/snapshots/"}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = '16.6.5'
group = 'com.yesman.epicfight'
archivesBaseName = 'epicfight'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

	    property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			args '-mixin.config=epicfight.mixins.json'

            mods {
                epicfight {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

	    property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			args '-mixin.config=epicfight.mixins.json'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'epicfight', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                epicfight {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "epicfight.mixins.refmap.json"
}

configurations {
    compile.extendsFrom shadow
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly 'org.jetbrains:annotations:24.0.1'
    shadow 'org.jetbrains:annotations:24.0.1'

}

jar {
    manifest {
        attributes([
            "Specification-Title": "epicfight",
            "Specification-Vendor": "epicfightsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "epicfight.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    from sourceSets.main.output
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}